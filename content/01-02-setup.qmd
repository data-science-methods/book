# Software, hardware, and accounts 

## Checklist

- [ ] R 4.1 or higher
- [ ] RStudio
- [ ] Package manager for your OS
- [ ] git
- [ ] pandoc
- [ ] GitHub account
- [ ] Sourcetree


## Hardware 

- Most sessions will involve writing code in class
- I strongly recommend *against* tablets (iPad, Surface) for this course
- I recommend that your machine have at least
    - 200 GB free hard drive space
    - 8 GB RAM
    - Intel i5 processor
    - Operating system capable of running R 4.1 or higher
        - Mac: 10.13 (High Sierra) or more recent
        - Windows: See [here](https://cran.r-project.org/bin/windows/base/rw-FAQ.html#Does-R-run-under-Windows-Vista_003f)
        - If you're running Linux I'm going to assume you can figure this out yourself
        

## Accessibility ##

I chose the tools and platforms for this course in part because they're industry-standard.  If you pursue a career as a data scientist in industry, you'll be expected to use GitHub (or something similar) on a daily basis.  And RStudio is by far the most commonly used IDE ("integrated development environment") for R. 

However, like many other technologies, they were originally developed using ableist assumptions about "normal" computer users.  In response to criticism, the developers of these systems and tools have gone back and made their technologies more accessible.  But there may still be barriers to accessibility that I have not anticipated.  

**If you encounter a barrier to participating in this course — even a small inconvenience — please let me know.**  Similarly, if you have ideas for making the course more accessible, please share them with me.  


## R and RStudio

[R](https://cran.r-project.org/) and [RStudio](https://rstudio.com/products/rstudio/download/)

</br>

- In 2000 R had a major release (version 4)
- Addressing some bugs has led to some rapid development in R and RStudio
- For consistency in class, **I encourage you to use the latest version of both R and RStudio**
- [Help on switching between different versions of R](https://support.rstudio.com/hc/en-us/articles/200486138-Changing-R-versions-for-the-RStudio-Desktop-IDE)


## OS

- All of the tools we'll use are available on all major OSes
    - Except Sourcetree, which isn't essential
    - [Find an alternative git GUI here](https://git-scm.com/download/gui/linux))
- I have much less experience debugging Windows and Linux, but will do what I can


## Package manager

- Software to facilitate installing, upgrading, and removing other software
- **Highly recommended** for installing git, pandoc, and some other tools we'll use later
	- Use OS installer for R and RStudio
- Mac OS: [Homebrew](https://brew.sh/) or [MacPorts](https://www.macports.org/install.php)
	- [Pros and cons of these two main options](https://apple.stackexchange.com/questions/32724/what-are-pros-and-cons-for-macports-fink-and-homebrew)
	- I use Homebrew
- Windows: [Chocolatey](https://chocolatey.org/install)
	- I guess there are others, but this is what previous students have recommended
	
</br>
- Once your package manager is ready to go, install git and pandoc
	- Mac, Homebrew: 
		```
		brew install git
		brew install pandoc
		```
	- Windows, Chocolatey: 
		- Needs to be in elevated/administrator mode
		- If prompted, Yes to running additional scripts
		```
		choco install git
		choco install pandoc
		```

## LaTeX

- Not strictly required for this class, but necessary for turning Rmarkdown into PDFs
- If you have no idea what that meant, don't worry about it for now
- I recommend the [TinyTeX distribution](https://yihui.org/tinytex/), which you can install via R: 
	```
	install.packages('tinytex')
	tinytex::install_tinytex()
	```


## GitHub and Sourcetree

- You'll need a [GitHub](https://github.com/) account and [Sourcetree](https://www.sourcetreeapp.com/)

</br>

- GitHub is [owned by Microsoft](https://www.cnbc.com/2020/11/29/microsofts-github-has-become-magnet-for-thorny-issues-like-riaa.html)
- And there are [concerns about how it mined public repositories to develop a code completion tool](https://www.theverge.com/2021/7/7/22561180/github-copilot-legal-copyright-fair-use-public-code)
- But it offers some key features that I want to use in this course
- You can do everything this course requires in private repositories, so long as you give access to the people who need access

