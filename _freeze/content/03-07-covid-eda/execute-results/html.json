{
  "hash": "6a316b97cbf915fb4900c9f8f4e6c83f",
  "result": {
    "markdown": "# Covid EDA \n\n## </br>\n\n- This EDA will start in class and continue on to the lab\n- We're interested in *the role of social distancing in the July 2020 Covid wave in California*\n\n## The standard narrative ##\n\nThe standard narrative about the July 2020 wave goes like this: \n\n- California had some of the first confirmed cases of Covid-19 in the US\n- California was also the first state to institute a stay-at-home order and encourage social distancing\n- These social distancing policies are why California did not experience the large first wave in March 2020 (contrast NYC)\n- Starting in May 2020, these policies were relaxed and \"lockdown fatigue\" meant that people were ignoring them anyways\n- This is why California did experience a more significant wave in July 2020\n\n\n--- \n\nOur research question:  Is reduced social distancing (measured using cellphone tracking data) correlated with increased Covid-19 case counts 4 weeks later? \n\n</br>\n\nIn class, we'll just be looking at the case counts. \n\n## Reflexivity\n\n(For time, you'll do these on your own as part of the lab.)\n\n## Setup \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidylog)\nlibrary(skimr)\nlibrary(visdat)\n\nlibrary(assertthat)\n\ntheme_set(theme_bw())\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## Data ##\n\nTo save some time in class, I've prepared a CSV that combines three datasets: \n\n- [Covid-19 case and death counts, at the county level, collected by the *New York Times*](https://github.com/nytimes/covid-19-data/blob/master/README.md)\n- Estimated county populations in 2018, from the US Census' American Community Survey\n- [\"Mobility data,\" based on cellphone tracking, from Google](https://kjhealy.github.io/covmobility/reference/google_mobility.html)\n\nThe dataset has also been filtered down to California.  \n\n## Get the data ##\n\n- This week's lab on GitHub\n    - <https://github.com/data-science-methods/lab_w06_covid>\n- `data` -> `covid.csv` -> \"Download\" (right-click and copy)\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_file = file.path('data', 'covid.csv')\ncovid_url = 'https://github.com/data-science-methods/lab_w06_covid/raw/main/data/covid.csv'\nif (!file.exists(covid_file)) {\n    download.file(covid_url, covid_file)\n}\n## Original version\n# covid_df = read_csv(covid_file, show_col_types = FALSE)\n## With daily change\ncovid_df = read_csv(covid_file, show_col_types = FALSE) |> \n    group_by(county) |>\n    mutate(across(.cols = c(cases, deaths),\n                  .fns = list(new = daily_new), date)) |> \n    ungroup() |> \n    mutate(across(.cols = c(matches('cases'), matches('deaths')), \n                  .fns = list(rate = ~ .x / population * 100000)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ngroup_by: one grouping variable (county)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nmutate (grouped): new variable 'cases_new' (double) with 1,737 unique values and <1% NA\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n                  new variable 'deaths_new' (double) with 168 unique values and <1% NA\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nungroup: no grouping variables\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nmutate: new variable 'cases_rate' (double) with 24,351 unique values and 0% NA\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n        new variable 'cases_new_rate' (double) with 9,753 unique values and <1% NA\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n        new variable 'deaths_rate' (double) with 8,485 unique values and 0% NA\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n        new variable 'deaths_new_rate' (double) with 1,056 unique values and <1% NA\n```\n:::\n:::\n\n## Some quick data checking ##\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(covid_df)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |         |\n|:------------------------|:--------|\n|Name                     |covid_df |\n|Number of rows           |33322    |\n|Number of columns        |19       |\n|_______________________  |         |\n|Column type frequency:   |         |\n|character                |3        |\n|Date                     |1        |\n|numeric                  |15       |\n|________________________ |         |\n|Group variables          |None     |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|county        |         0|             1|   4|  15|     0|       58|          0|\n|state         |         0|             1|  10|  10|     0|        1|          0|\n|fips          |         0|             1|   5|   5|     0|       58|          0|\n\n\n**Variable type: Date**\n\n|skim_variable | n_missing| complete_rate|min        |max        |median     | n_unique|\n|:-------------|---------:|-------------:|:----------|:----------|:----------|--------:|\n|date          |         0|             1|2020-01-25 |2021-10-12 |2020-12-29 |      627|\n\n\n**Variable type: numeric**\n\n|skim_variable   | n_missing| complete_rate|      mean|         sd|       p0|      p25|       p50|       p75|        p100|hist  |\n|:---------------|---------:|-------------:|---------:|----------:|--------:|--------:|---------:|---------:|-----------:|:-----|\n|cases           |         0|          1.00|  38007.85|  128692.55|     1.00|   479.25|   4458.00|  23744.50|  1473123.00|▇▁▁▁▁ |\n|deaths          |         0|          1.00|    590.84|    2290.48|     0.00|     5.00|     55.00|    299.00|    26346.00|▇▁▁▁▁ |\n|population      |         0|          1.00| 708598.07| 1508235.90|  1146.00| 53932.00| 186661.00| 765935.00| 10098052.00|▇▁▁▁▁ |\n|retail          |     15286|          0.54|    -25.50|      16.78|  -100.00|   -35.00|    -25.00|    -16.00|       63.00|▁▃▇▁▁ |\n|grocery         |     16225|          0.51|     -5.84|      13.46|   -74.00|   -14.00|     -7.00|      1.00|       86.00|▁▆▇▁▁ |\n|parks           |     18301|          0.45|      2.16|      40.35|   -83.00|   -22.00|     -3.00|     18.00|      323.00|▇▆▁▁▁ |\n|transit         |     18639|          0.44|    -29.67|      27.29|   -88.00|   -49.00|    -32.00|    -15.00|       97.00|▃▇▂▁▁ |\n|workplaces      |     14112|          0.58|    -30.74|      15.01|   -87.00|   -39.00|    -31.00|    -20.00|       11.00|▁▂▇▇▁ |\n|residential     |     17022|          0.49|     10.82|       6.33|    -7.00|     6.00|     10.00|     14.00|       37.00|▁▇▆▂▁ |\n|cases_new       |        58|          1.00|    144.62|     680.67| -1157.00|     0.00|     13.00|     77.00|    29174.00|▇▁▁▁▁ |\n|deaths_new      |        58|          1.00|      2.11|      12.92|  -423.00|     0.00|      0.00|      1.00|      930.00|▁▇▁▁▁ |\n|cases_rate      |         0|          1.00|   4714.32|    4521.80|     0.01|   541.96|   3567.44|   7764.35|    23466.41|▇▃▂▁▁ |\n|cases_new_rate  |        58|          1.00|     20.11|      45.88|  -211.66|     0.00|      6.53|     21.91|     2055.69|▇▁▁▁▁ |\n|deaths_rate     |         0|          1.00|     58.83|      65.99|     0.00|     5.53|     38.53|     88.80|      422.27|▇▂▁▁▁ |\n|deaths_new_rate |        58|          1.00|      0.24|       1.04|   -31.56|     0.00|      0.00|      0.05|       48.63|▁▇▁▁▁ |\n:::\n:::\n\n## Variables ##\n\n- `county`, `state`, and `fips` are all geographic identifiers, and complete\n    - 58 unique values for both `county` and `fips`\n    - How many counties does California have? \n- `date` gives the date, is also complete\n- `cases` and `deaths` come from the NYT covid data\n- `population` comes from the Census\n- `retail`, `grocery`, `parks`, `transit`, `workplaces`, and `residential` come from the Google Mobility data\n    - Much lower completion rate\n\n## Too many timeseries plots ##\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(covid_df, aes(date, cases)) +\n    geom_line() +\n    facet_wrap(vars(county), \n               scales = 'free_y')\n```\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n## Number of observations per county ##\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(covid_df, aes(fct_rev(fct_infreq(county)))) +\n    # geom_bar() +\n    geom_point(stat = 'count') +\n    geom_segment(stat = 'count', \n                 aes(xend = county),\n                 yend = 0) +\n    coord_flip() +\n    labs(x = 'county')\n```\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n*Why do different counties have different numbers of observations?*\n\n\n## No more than 1 observation per county per day ##\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df |> \n    count(county, date) |> \n    filter(n > 1) |> \n    nrow() |> \n    identical(0L) |> \n    assert_that(msg = 'More than 1 observation per county per day')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ncount: now 33,322 rows and 3 columns, ungrouped\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nfilter: removed all rows (100%)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n## Cumulative vs. daily cases ##\n\nBoth `cases` and `deaths` are cumulative, not the daily new value\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df |> \n    filter(county == 'Merced') |> \n    ggplot(aes(date, cases)) +\n    geom_line()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nfilter: removed 32,754 rows (98%), 568 rows remaining\n```\n:::\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n---\n\n\n- We'll write a little function to calculate the differences\n- Incorporate it into the pipe that loads the data\n    - Then restart R and rerun\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_new = function(x, order_var) {\n    diff = x - dplyr::lag(x, order_by = order_var)\n    return(diff)\n}\n```\n:::\n\n---\n\n- Test it on Orange and LA Counties\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df |>\n    filter(county %in% c('Orange', 'Los Angeles')) |>\n    group_by(county) |>\n    mutate(across(.cols = c(cases, deaths),\n                  .fns = list(new = daily_new), date)) |>\n    select(date, county, matches('cases'), matches('deaths')) |> \n    View()\n```\n:::\n\n---\n\n\nNow we have daily values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df |> \n    filter(county == 'Merced') |> \n    ggplot(aes(date, cases_new)) +\n    geom_line()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nfilter: removed 32,754 rows (98%), 568 rows remaining\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 row(s) containing missing values (geom_path).\n```\n:::\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Add an assertion ##\n\n- For each county, the first daily diff should be `NA`\n- But none of the others\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df |> \n    group_by(county) |> \n    slice(-1) |> \n    pull(cases_new) |> \n    is.na() |> \n    any() |> \n    magrittr::not() |> \n    assert_that(msg = 'missing values in cases_new')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ngroup_by: one grouping variable (county)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nslice (grouped): removed 58 rows (<1%), 33,264 rows remaining\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n## Distribution of cases by county ##\n\nFirst pass is hard to read\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(covid_df, aes(county, cases_new)) +\n    geom_boxplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 58 rows containing non-finite values (stat_boxplot).\n```\n:::\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## Revisions\n\n- `coef = 1000`\n- y-axis on a log scale\n- flip the coordinates\n- reorder the counties by median number of cases\n- filter out `cases_new == 0`\n- meaningful axis labels\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df |> \n    filter(cases_new > 0) |>\n    ggplot(aes(fct_reorder(county, cases_new, \n                           .fun = median, na.rm = TRUE),\n                     cases_new)) +\n    geom_boxplot(coef = 1000) +\n    scale_y_log10() +\n    coord_flip() +\n    labs(x = 'county', y = 'daily new cases')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nfilter: removed 9,133 rows (27%), 24,189 rows remaining\n```\n:::\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n## 9 plots of the same plot ##\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(covid_df, aes(x = cases_new, y = deaths_new)) +\n    # geom_point() +\n    # geom_point(alpha = .2) +\n    # geom_count(alpha = .5) +\n    # geom_bin2d() +\n    # geom_hex() +\n    # geom_hex(aes(color = after_stat(count))) +\n    # geom_density2d(size = 1) +\n    # stat_density2d(contour = FALSE, geom = 'raster',\n    #                aes(fill = after_stat(density)),\n    #                show.legend = FALSE) +\n    stat_density2d(contour = TRUE, geom = 'polygon',\n                   aes(fill = after_stat(level)),\n                   show.legend = FALSE) +\n    scale_x_log10() +\n    scale_y_log10() +\n    scale_color_viridis_c(aesthetics = c('color', 'fill'))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous x-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 25048 rows containing non-finite values (stat_density2d).\n```\n:::\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n## Why so many dropped values? ##\n\n- The binned plots drop 25,048 rows, or 75% of the data\n- Why? \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df |> \n    mutate(log_cases_new = log(cases_new)) |> \n    select(cases_new, log_cases_new) |> \n    filter(!is.finite(log_cases_new)) |> \n    count(cases_new) |> \n    arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in log(cases_new): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nmutate: new variable 'log_cases_new' (double) with 1,682 unique values and 1% NA\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nselect: dropped 18 variables (date, county, state, fips, cases, …)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nfilter: removed 24,189 rows (73%), 9,133 rows remaining\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ncount: now 58 rows and 2 columns, ungrouped\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 58 × 2\n   cases_new     n\n       <dbl> <int>\n 1         0  8829\n 2        -1   113\n 3        NA    58\n 4        -2    27\n 5        -3    11\n 6        -6     9\n 7        -8     8\n 8       -17     4\n 9       -12     4\n10        -5     4\n# … with 48 more rows\n```\n:::\n:::\n\n\n## Cases vs. population ##\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(covid_df, aes(population, cases_new)) +\n    geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 58 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n## Absolute counts to rates ##\n\n- `cases` and `deaths` are absolute counts\n- But county populations differ over orders of magnitude\n- *Construct a lollipop plot to illustrate this*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df |> \n    select(county, population) |> \n    distinct() |> \n    ggplot(aes(x = fct_reorder(county, population), \n               y = population)) +\n    geom_point() +\n    geom_segment(aes(xend = county), yend = 0) +\n    scale_y_log10() +\n    coord_flip()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nselect: dropped 17 variables (date, state, fips, cases, deaths, …)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ndistinct: removed 33,264 rows (>99%), 58 rows remaining\n```\n:::\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n---\n\nLet's calculate rates for new and cumulative cases and deaths\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_df = covid_df |> \n    mutate(across(.cols = c(matches('cases'), matches('deaths')), \n                  .fns = list(rate = ~ .x / population * 100000)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nmutate: new variable 'cases_rate_rate' (double) with 24,355 unique values and 0% NA\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n        new variable 'cases_new_rate_rate' (double) with 9,755 unique values and <1% NA\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n        new variable 'deaths_rate_rate' (double) with 8,485 unique values and 0% NA\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n        new variable 'deaths_new_rate_rate' (double) with 1,056 unique values and <1% NA\n```\n:::\n\n```{.r .cell-code}\ntest_df |> \n    filter(county %in% c('Merced', 'Fresno', 'Los Angeles')) |> \n    ggplot(aes(date, cases_new_rate, \n               group = county, color = county)) +\n    geom_line()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nfilter: removed 31,543 rows (95%), 1,779 rows remaining\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3 row(s) containing missing values (geom_path).\n```\n:::\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n*Incorporate this into the pipe when we load `covid_df`*\n\n## Rates vs. population ##\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(covid_df, aes(population, cases_new_rate)) +\n    geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 58 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n## Counties by maximum rate of new cases ##\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df |> \n    group_by(county) |> \n    summarize(population = max(population),\n              cases = max(cases_new_rate, na.rm = TRUE)) |> \n    arrange(desc(cases))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ngroup_by: one grouping variable (county)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nsummarize: now 58 rows and 3 columns, ungrouped\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 58 × 3\n   county   population cases\n   <chr>         <dbl> <dbl>\n 1 Tulare       460477 2056.\n 2 Alpine         1146 1832.\n 3 Imperial     180216 1640.\n 4 Lassen        31185 1260.\n 5 Shasta       179085 1032.\n 6 Tehama        63373 1023.\n 7 Fresno       978130  950.\n 8 Glenn         27897  921.\n 9 Butte        227075  875.\n10 Kings        150075  782.\n# … with 48 more rows\n```\n:::\n:::\n\n\n## Cases vs. deaths when we control for population ##\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(covid_df, aes(x = cases_new_rate, y = deaths_new_rate)) +\n    # geom_point() +\n    geom_point(alpha = .2) +\n    # geom_count(alpha = .5) +\n    # geom_bin2d() +\n    # geom_hex() +\n    # geom_hex(aes(color = after_stat(count))) +\n    # geom_density2d(size = 1) +\n    # stat_density2d(contour = FALSE, geom = 'raster',\n    #                aes(fill = after_stat(density)),\n    #                show.legend = FALSE) +\n    # stat_density2d(contour = TRUE, geom = 'polygon',\n    #                aes(fill = after_stat(level)),\n    #                show.legend = FALSE) +\n    scale_x_log10() +\n    scale_y_log10() +\n    scale_color_viridis_c(aesthetics = c('color', 'fill'))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous x-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 556 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](03-07-covid-eda_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::",
    "supporting": [
      "03-07-covid-eda_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}